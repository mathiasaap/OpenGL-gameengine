package rendering;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.lwjgl.opengl.GL11;

import lighting.Light;
import matrix.Camera;
import mesh.MeshInstance;
import mesh.TexMesh;
import shaders.MeshShader;
import shaders.TerrainShader;

public class Renderer {

	private MeshShader meshShader= new MeshShader("res/shaders/vsMesh.glsl","res/shaders/fsMesh.glsl");
	private TerrainShader terrainShader= new TerrainShader("res/shaders/vsTerrain.glsl","res/shaders/fsTerrain.glsl");
	
	private RenderMesh renderMesh = new RenderMesh(meshShader);
	private RenderTerrain renderTerrain= new RenderTerrain(terrainShader);
	
	private Map<TexMesh, List<MeshInstance>> meshInstances = new HashMap<>();
	
	
	public void render(Light light, Camera cam)
	{
		renderTerrain.prepareScene();
		terrainShader.useProgram();
		terrainShader.unbindShader();
		
		meshShader.useProgram();
		meshShader.uploadLight(light);
		renderMesh.draw(meshInstances);
		meshShader.unbindShader();
		meshInstances.clear();
		
		
	}
	
	public void prepareScene()
	{
		GL11.glClear(GL11.GL_COLOR_BUFFER_BIT | GL11.GL_DEPTH_BUFFER_BIT);
		//GL11.glClearColor(0.2f, 0.3f, 0.6f, 1.0f);
		GL11.glClearColor((80f/256f), (16f/256f), (0f/256f), 1.0f);
		
	}
	
	public void putInstance(MeshInstance mInstance)
	{
		TexMesh model = mInstance.getMesh();
		
	}
	
}
