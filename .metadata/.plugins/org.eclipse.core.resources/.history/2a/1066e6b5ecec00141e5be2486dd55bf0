package rendering;

import mesh.Rekt;

import org.lwjgl.opengl.GL11;
import org.lwjgl.opengl.GL13;
import org.lwjgl.opengl.GL20;
import org.lwjgl.opengl.GL30;
import org.lwjgl.util.vector.Matrix4f;

import textures.FBOTexture;



public class RenderFramebuffer {
private Rekt rekt;

public RenderFramebuffer(LoadMesh loader)
{
	
	
}

public void draw(FBOTexture tex)
{
	GL30.glBindVertexArray(rekt.getMesh().getVAO());
	GL20.glEnableVertexAttribArray(0);
	
	GL11.glDisable(GL11.GL_DEPTH_TEST);

		GL13.glActiveTexture(GL13.GL_TEXTURE0);
		
		GL11.glBindTexture(GL11.GL_TEXTURE_2D, tex.getId());
		Matrix4f mat=matrix.transformationMatrix();
		shader.loadTranformationMatrix(mat);
		GL11.glDrawArrays(GL11.GL_TRIANGLE_STRIP,0,rekt.getMesh().getVertices());
		
	
	GL11.glEnable(GL11.GL_DEPTH_TEST);

	GL20.glDisableVertexAttribArray(0);
	shader.unbindShader();
	
}
	

}
